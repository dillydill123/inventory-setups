Need to add a prefix to layouts
 - Add >>>invsetup<<< to indicate it comes from inventory setup plugin
 - Could use the hash afterwards? Is it worth doing that? banktags.layout_>>>invsetup<<<_<<hash>> would be the key
 - In Data manager, we can check for layouts that don't exist anymore.
   - Gather all banktags.layout* and remove ones that don't have >>>invsetup<<<.
   - Go through all inventory setups. Check if a config key for banktags.layout_>>>invsetups<<<_<hash_of_name> exists. If so, remove from the list
   - Any remaining config keys with >>>invsetups<<< must be old ones and can be deleted.
 - Function to get layout key.
Setup Deleted
 - Remove the layout with layoutManager, Remove the tag as well
Setup Refreshed.
  - Redo the layout from scratch using preset or zigzag.
Setup Added
 - Create a layout with preset or zigzag and save it. Also create a tag.
Setup name Changed
 - Get the layout, remove the old layout and tag, and save a new layout and tag with the new name.
Helper function to remove all untagged items in a layout
 - Variation mapped items will not be tagged in the setup, so we don't remove them.
Helper function to remove items from a layout
 - This will also remove the items from the tag.
Item fuzzy toggled
 - Remove the item from the tag and add it again with the new variation setting (done)
 - If adding, that's it, can stop there.
 - If removing, need to get all variations of that item and update the layout.
  - Get all untagged items from a layout
  - For each untagged item, check if it's in the variation mapping for the item that was toggled fuzzy in the layout.
    - If both these conditions are true, delete item from the layout.
    - Don't worry about the case that the same item might be fuzzy in another part of the setup and you should keep it in the layout. This is highly unlikely. Make a comment discussing this.

^^^ DONE ^^^
vvv TODO VVV

Start Bank Tags Plugin
  - What about Hub BTL? How should it be handled?
Need to create default layouts
  - Support two types - zigzag and preset.
  - Add a config option for the default.
Convert Bank Tag Layout data to core layout data.
  - How? Adam Layouts has a conversion.
  - Use a key to indicate if the conversion has happened before.
Items Changed in a Setup
  - Need to handle changed by slot and changed by search.
  - If someone changes an item in a setup by slot, we need to update the layout (and tag) as well.
  - Recalculate function. Remove tag, re-add all items to tag?
  - Item added: Just add the new item to the first slot -1 in the layout, also update the tag. If the item is fuzzy, simply mark that in the tag.
    - I think I just need to add the item to the tag. The layout will be updated for me. For ammo container, add
  - Item removed: Need to recalculate the items that should exist in the tag. This is because an ammo container may have been
  - Item Swapped: Basically the two above combined. First remove the item, then add the new item.
  - Need to handle ammo containers?
  - Need a function to remove items from a layout that are not in a setup. Update the setup first then update the layout.
    - When removing an item, do we need to worry about removing it from the tag as well?
    - If removing a rune pouch, the runes were tagged. Those would need to be removed.
Importing Setups
 - Maybe create an InventorySetupPortable? which has a layout object and a InventorySetup object. Can serialize that instead.
Exporting Setups
 - Use InventorySetupPortable idea from above?
Overwrite layout
 - Add option in additional worn items to overwrite layout. Also overwrite the tag.
 - Remove tag and then recreate it. Save layout to overwrite it.
Add ability to export tag that core bank tags can read.
Make sure all TODOs are taken care of